/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define NUMBERS 4
#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4

&mt { retro-tap; };

&sk {
    //release-after-ms = <2000>;

    quick-release;

    // /delete-property/ ignore-modifiers;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&kp ESC>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 17>;
            timeout-ms = <30>;
        };
    };

    macros {
        none_blk: none_blk {
            label = "NON_BLOCKING";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(COMMA) &kp EQUAL>;
        };

        cmd_mode: cmd_mode {
            label = "VIM_CMD_MODE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESC &kp LS(SEMI)>;
        };
    };

    behaviors {
        lthp: lthp {
            compatible = "zmk,behavior-hold-tap";
            label = "LTHP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "HR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        sftcap: sftcap {
            compatible = "zmk,behavior-tap-dance";
            label = "SFTCAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB        &kp Q           &kp W           &kp E        &kp R             &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LCTRL ESC  &hr LEFT_GUI A  &hr LEFT_ALT S  &hr LCTRL D  &hr LEFT_SHIFT F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&sk LSHFT      &kp Z           &kp X           &kp C        &kp V             &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT ESC
                                               &kp LGUI     &lthp 2 SPACE     &lthp 1 TAB  &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1        &kp N2          &kp N3        &kp N4        &kp N5        &kp N6    &kp N7    &kp N8    &kp N9     &kp N0     &kp DEL
&kp LCTRL  &kp N6        &kp N7          &kp N8        &kp N9        &kp LS(SEMI)  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &cmd_mode  &trans
&kp LSHFT  &tog NUMBERS  &bt BT_CLR_ALL  &bt BT_SEL 1  &bt BT_SEL 2  &kp N0        &trans    &trans    &trans    &trans     &trans     &trans
                                         &kp LGUI      &trans        &kp SPACE     &kp RET   &trans    &kp LGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &kp LPAR  &kp RPAR  &none_blk  &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &kp LBKT  &kp RBKT  &trans     &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE  &kp RET    &trans     &kp RALT
            >;
        };

        adjust_layer {
            bindings = <
&trans           &bt BT_CLR       &trans           &trans           &sys_reset       &bootloader                        &bootloader  &sys_reset  &trans  &trans  &trans  &trans
&trans           &bt BT0          &bt BT1          &bt BT2          &bt BT3          &bt BT4                            &trans       &trans      &trans  &trans  &trans  &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_COLOR_HSB(128,100,10)  &trans       &trans      &trans  &trans  &trans  &trans
                                                   &trans           &trans           &trans                             &kp RET      &trans      &trans
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &trans        &kp N1  &kp N2    &kp N3  &trans        &trans     &trans     &trans     &trans   &trans        &kp BSPC
&kp LCTRL  &trans        &kp N4  &kp N5    &kp N6  &kp LS(SEMI)  &kp MINUS  &kp EQUAL  &trans     &trans   &kp LS(SEMI)  &kp SQT
&kp LSHFT  &tog NUMBERS  &kp N7  &kp N8    &kp N9  &kp N0        &trans     &kp PLUS   &kp COMMA  &kp DOT  &kp FSLH      &trans
                                 &kp LGUI  &trans  &kp SPACE     &kp RET    &trans     &kp LGUI
            >;
        };
    };
};
