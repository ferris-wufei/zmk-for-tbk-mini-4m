/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define NUMBERS 4
#define BT0 BT_SEL 0
#define BT1 BT_SEL 1
#define BT2 BT_SEL 2
#define BT3 BT_SEL 3
#define BT4 BT_SEL 4

&mt { retro-tap; };

&sk {
    //release-after-ms = <2000>;

    quick-release;

    // /delete-property/ ignore-modifiers;
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <30>;
            key-positions = <14 15>;
            bindings = <&kp ESC>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 17>;
            timeout-ms = <30>;
        };

        left_bkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 5>;
            timeout-ms = <30>;
        };

        right_bkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
            timeout-ms = <30>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <6 18>;
            timeout-ms = <30>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <29 28>;
            timeout-ms = <30>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
            timeout-ms = <30>;
        };
    };

    behaviors {
        lthp: lthp {
            compatible = "zmk,behavior-hold-tap";
            label = "LTHP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "HR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
            retro-tap;
        };

        sftcap: sftcap {
            compatible = "zmk,behavior-tap-dance";
            label = "SFTCAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q           &kp W           &kp E        &kp R             &kp T        &kp Y          &kp U              &kp I        &kp O            &kp P                    &trans
&trans  &hr LEFT_GUI A  &hr LEFT_ALT S  &hr LCTRL D  &hr LEFT_SHIFT F  &kp G        &kp H          &hr RIGHT_SHIFT J  &hr RCTRL K  &hr RIGHT_ALT L  &hr RIGHT_GUI SEMICOLON  &trans
&trans  &kp Z           &kp X           &kp C        &kp V             &kp B        &kp N          &kp M              &kp COMMA    &kp DOT          &kp FSLH                 &trans
                                        &kp LGUI     &lthp 2 SPACE     &lthp 1 TAB  &lthp 1 ENTER  &lthp 2 BACKSPACE  &sftcap
            >;
        };

        number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5   &kp N6        &kp N7         &kp N8       &kp N9         &kp N0    &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp ESC  &kp LEFT      &kp DOWN       &kp UP       &kp RIGHT      &kp HOME  &trans
&trans  &kp F1    &kp F2    &kp F3     &kp F4     &kp F12  &kp LG(LEFT)  &kp PAGE_DOWN  &kp PAGE_UP  &kp RG(RIGHT)  &kp END   &trans
                            &trans     &mo 3      &trans   &trans        &mo 3          &trans
            >;
        };

        symbol {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL        &kp AT    &kp HASH       &kp DLLR   &kp PRCNT        &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR       &kp RPAR           &trans
&trans  &kp LGUI        &kp LALT  &kp LCTRL      &kp LSHFT  &kp ESC          &kp PLUS   &kp MINUS  &kp GRAVE     &kp PIPE       &kp APOS           &trans
&trans  &kp LEFT_BRACE  &kp LBKT  &kp LG(LA(C))  &kp RBKT   &kp RIGHT_BRACE  &kp EQUAL  &kp UNDER  &kp TILDE     &kp BACKSLASH  &kp DOUBLE_QUOTES  &trans
                                  &trans         &trans     &trans           &trans     &trans     &trans
            >;
        };

        function {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans       &trans
&trans  &trans        &trans        &kp C_VOLUME_UP    &trans        &trans        &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_CLR    &trans        &kp C_VOLUME_DOWN  &trans        &trans        &trans  &trans  &trans  &trans  &bootloader  &trans
                                    &trans             &trans        &trans        &trans  &trans  &trans
            >;
        };
    };
};
